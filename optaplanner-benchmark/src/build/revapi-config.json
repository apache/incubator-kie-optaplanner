{
  "filters": {
    "revapi": {
      "filter": {
        "elements": {
          "exclude": [
            "method .* org\\.optaplanner\\.benchmark\\.config.*::(?!(set|get)).*",
            "parameter .* org\\.optaplanner\\.benchmark\\.config.*::(?!(set|get)).*"
          ]
        }
      },
      "java": {
        "filter": {
          "packages": {
            "comment": "We don't want to check transitive classes, since we already check them in their own module.",
            "regex": true,
            "include": [
              "org\\.optaplanner\\.benchmark\\.api.*",
              "org\\.optaplanner\\.benchmark\\.config.*"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 7.0.0.Final and the current branch. These changes are desired and thus ignored. They should be removed when 7.1.0.Final is available.",
      "ignore": [
        {
          "code": "java.method.abstractMethodAdded",
          "new": "method <Solution_> org.optaplanner.benchmark.api.PlannerBenchmark org.optaplanner.benchmark.api.PlannerBenchmarkFactory::buildPlannerBenchmark(Solution_[])",
          "package": "org.optaplanner.benchmark.api",
          "classSimpleName": "PlannerBenchmarkFactory",
          "methodName": "buildPlannerBenchmark",
          "elementKind": "method",
          "justification": "New method to create benchmark with problem instances directly."
        }
      ]
    }
  }
}
