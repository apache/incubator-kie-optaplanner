@Library('jenkins-pipeline-shared-libraries')_

additionalTimeout = "${env.ADDITIONAL_TIMEOUT?.trim() ?: 120}"

agentLabel = "${env.ADDITIONAL_LABEL?.trim() ? ADDITIONAL_LABEL : 'kie-rhel7 && kie-mem16g'} && !master"
build_jdk_tool = env.BUILD_JDK_TOOL?.trim() ?: 'kie-jdk11'
build_maven_tool = env.BUILD_MAVEN_TOOL?.trim() ?: 'kie-maven-3.8.1'

pr_type = env.PR_TYPE?.trim() ?: 'pr'

pipeline {
    agent {
        label agentLabel
    }
    tools {
        nodejs 'nodejs-12.16.3'
    }
    options {
        timestamps ()
        timeout(time: additionalTimeout, unit: 'MINUTES')
    }
    environment {
        FIREFOX_FOLDER = '/opt/tools/firefox-60esr'
    }
    stages {
        stage('Initialize') {
            steps {
                sh 'printenv'
            }
        }
        // executes a script that compresses the consoleText and attaches it to the mail
        stage('build sh script') {
            steps {
                script {
                    mailer.buildLogScriptPR()
                }
            }
        }
        stage('check space before build') {
            steps {
                script{
                    util.spaceLeft()
                }
            }
        }
        stage('Build projects') {
            tools {
              jdk build_jdk_tool
              maven build_maven_tool
            }
            steps {
                script {
                    def buildChainActionInfo =
                      isFDB() ? [action: 'fd', file: 'pull-request-config.yaml'] :
                      isSingle() ? [action: 'single', file: 'pull-request-config.yaml'] :
                      [action: 'pr', file: 'pull-request-config.yaml']
                    withCredentials([string(credentialsId: 'kie-ci1-token', variable: 'GITHUB_TOKEN')]) {
                        sh "build-chain-action -token=${GITHUB_TOKEN} -df='https://raw.githubusercontent.com/\${GROUP}/kogito-pipelines/master/.ci/${buildChainActionInfo.file}' -folder='bc' build ${buildChainActionInfo.action} -url=${env.ghprbPullLink} --skipParallelCheckout -cct '(^mvn .*)||\$1 -Dmaven.wagon.http.ssl.insecure=true'"
                    }
                }
            }
        }
        stage('check space after build') {
            steps {
                script{
                    util.spaceLeft()
                }
            }
        }
    }
    post {
        always {
            sh '$WORKSPACE/trace.sh'
            junit '**/target/surefire-reports/**/*.xml, **/target/failsafe-reports/**/*.xml'
        }
        failure {
            script {
                mailer.sendEmail_failedPR()
            }
        }
        unstable {
            script {
                mailer.sendEmail_unstablePR()
            }
        }
        fixed {
            script {
                mailer.sendEmail_fixedPR()
            }
        }
        cleanup {
            script {
                // Clean also docker in case of usage of testcontainers lib
                util.cleanNode('docker')
            }
        }
    }
}

def isPR(){
    return pr_type == 'pr';
}

def isFDB(){
    return pr_type == 'fdb';
}

def isSingle(){
    return pr_type == 'single';
}