{
  "filters": {
    "revapi": {
      "filter": {
        "elements": {
          "exclude": [
            "method .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*",
            "parameter .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*"
          ]
        }
      },
      "java": {
        "filter": {
          "packages": {
            "comment": "We don't want to check transitive classes, since we already check them in their own module.",
            "regex": true,
            "include": [
              "org\\.optaplanner\\.core\\.api.*",
              "org\\.optaplanner\\.core\\.config.*"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 7.33.0.Final and the current branch. These changes are desired and thus ignored.",
      "ignore": [
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.ConstraintStream::impact(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score<?>)",
          "package": "org.optaplanner.core.api.score.stream",
          "classSimpleName": "ConstraintStream",
          "methodName": "impact",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, B>::impact(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score<?>, java.util.function.ToIntBiFunction<A, B>)",
          "package": "org.optaplanner.core.api.score.stream.bi",
          "classSimpleName": "BiConstraintStream",
          "methodName": "impact",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, B>::impactBigDecimal(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score<?>, java.util.function.BiFunction<A, B, java.math.BigDecimal>)",
          "package": "org.optaplanner.core.api.score.stream.bi",
          "classSimpleName": "BiConstraintStream",
          "methodName": "impactBigDecimal",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, B>::impactConfigurable(java.lang.String, java.lang.String, java.util.function.ToIntBiFunction<A, B>)",
          "package": "org.optaplanner.core.api.score.stream.bi",
          "classSimpleName": "BiConstraintStream",
          "methodName": "impactConfigurable",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, B>::impactConfigurableBigDecimal(java.lang.String, java.lang.String, java.util.function.BiFunction<A, B, java.math.BigDecimal>)",
          "package": "org.optaplanner.core.api.score.stream.bi",
          "classSimpleName": "BiConstraintStream",
          "methodName": "impactConfigurableBigDecimal",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, B>::impactConfigurableLong(java.lang.String, java.lang.String, java.util.function.ToLongBiFunction<A, B>)",
          "package": "org.optaplanner.core.api.score.stream.bi",
          "classSimpleName": "BiConstraintStream",
          "methodName": "impactConfigurableLong",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, B>::impactLong(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score<?>, java.util.function.ToLongBiFunction<A, B>)",
          "package": "org.optaplanner.core.api.score.stream.bi",
          "classSimpleName": "BiConstraintStream",
          "methodName": "impactLong",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.quad.QuadConstraintStream<A, B, C, D>::impact(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score<?>, org.optaplanner.core.api.function.ToIntQuadFunction<A, B, C, D>)",
          "package": "org.optaplanner.core.api.score.stream.quad",
          "classSimpleName": "QuadConstraintStream",
          "methodName": "impact",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.quad.QuadConstraintStream<A, B, C, D>::impactBigDecimal(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score<?>, org.optaplanner.core.api.function.QuadFunction<A, B, C, D, java.math.BigDecimal>)",
          "package": "org.optaplanner.core.api.score.stream.quad",
          "classSimpleName": "QuadConstraintStream",
          "methodName": "impactBigDecimal",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.quad.QuadConstraintStream<A, B, C, D>::impactConfigurable(java.lang.String, java.lang.String, org.optaplanner.core.api.function.ToIntQuadFunction<A, B, C, D>)",
          "package": "org.optaplanner.core.api.score.stream.quad",
          "classSimpleName": "QuadConstraintStream",
          "methodName": "impactConfigurable",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.quad.QuadConstraintStream<A, B, C, D>::impactConfigurableBigDecimal(java.lang.String, java.lang.String, org.optaplanner.core.api.function.QuadFunction<A, B, C, D, java.math.BigDecimal>)",
          "package": "org.optaplanner.core.api.score.stream.quad",
          "classSimpleName": "QuadConstraintStream",
          "methodName": "impactConfigurableBigDecimal",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.quad.QuadConstraintStream<A, B, C, D>::impactConfigurableLong(java.lang.String, java.lang.String, org.optaplanner.core.api.function.ToLongQuadFunction<A, B, C, D>)",
          "package": "org.optaplanner.core.api.score.stream.quad",
          "classSimpleName": "QuadConstraintStream",
          "methodName": "impactConfigurableLong",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.quad.QuadConstraintStream<A, B, C, D>::impactLong(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score<?>, org.optaplanner.core.api.function.ToLongQuadFunction<A, B, C, D>)",
          "package": "org.optaplanner.core.api.score.stream.quad",
          "classSimpleName": "QuadConstraintStream",
          "methodName": "impactLong",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.tri.TriConstraintStream<A, B, C>::impact(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score<?>, org.optaplanner.core.api.function.ToIntTriFunction<A, B, C>)",
          "package": "org.optaplanner.core.api.score.stream.tri",
          "classSimpleName": "TriConstraintStream",
          "methodName": "impact",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.tri.TriConstraintStream<A, B, C>::impactBigDecimal(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score<?>, org.optaplanner.core.api.function.TriFunction<A, B, C, java.math.BigDecimal>)",
          "package": "org.optaplanner.core.api.score.stream.tri",
          "classSimpleName": "TriConstraintStream",
          "methodName": "impactBigDecimal",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.tri.TriConstraintStream<A, B, C>::impactConfigurable(java.lang.String, java.lang.String, org.optaplanner.core.api.function.ToIntTriFunction<A, B, C>)",
          "package": "org.optaplanner.core.api.score.stream.tri",
          "classSimpleName": "TriConstraintStream",
          "methodName": "impactConfigurable",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.tri.TriConstraintStream<A, B, C>::impactConfigurableBigDecimal(java.lang.String, java.lang.String, org.optaplanner.core.api.function.TriFunction<A, B, C, java.math.BigDecimal>)",
          "package": "org.optaplanner.core.api.score.stream.tri",
          "classSimpleName": "TriConstraintStream",
          "methodName": "impactConfigurableBigDecimal",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.tri.TriConstraintStream<A, B, C>::impactConfigurableLong(java.lang.String, java.lang.String, org.optaplanner.core.api.function.ToLongTriFunction<A, B, C>)",
          "package": "org.optaplanner.core.api.score.stream.tri",
          "classSimpleName": "TriConstraintStream",
          "methodName": "impactConfigurableLong",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.tri.TriConstraintStream<A, B, C>::impactLong(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score<?>, org.optaplanner.core.api.function.ToLongTriFunction<A, B, C>)",
          "package": "org.optaplanner.core.api.score.stream.tri",
          "classSimpleName": "TriConstraintStream",
          "methodName": "impactLong",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::impact(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score<?>, java.util.function.ToIntFunction<A>)",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "impact",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::impactBigDecimal(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score<?>, java.util.function.Function<A, java.math.BigDecimal>)",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "impactBigDecimal",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::impactConfigurable(java.lang.String, java.lang.String, java.util.function.ToIntFunction<A>)",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "impactConfigurable",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::impactConfigurableBigDecimal(java.lang.String, java.lang.String, java.util.function.Function<A, java.math.BigDecimal>)",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "impactConfigurableBigDecimal",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::impactConfigurableLong(java.lang.String, java.lang.String, java.util.function.ToLongFunction<A>)",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "impactConfigurableLong",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method org.optaplanner.core.api.score.stream.Constraint org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::impactLong(java.lang.String, java.lang.String, org.optaplanner.core.api.score.Score<?>, java.util.function.ToLongFunction<A>)",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "impactLong",
          "elementKind": "method",
          "justification": "Introduced a neutral score impact functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method S org.optaplanner.core.impl.score.definition.ScoreDefinition<S extends org.optaplanner.core.api.score.Score<S extends org.optaplanner.core.api.score.Score<S>>>::getOneSoftestScore() @ org.optaplanner.core.api.domain.solution.PlanningScore.NullScoreDefinition",
          "package": "org.optaplanner.core.api.domain.solution",
          "classSimpleName": "NullScoreDefinition",
          "methodName": "getOneSoftestScore",
          "elementKind": "method",
          "justification": "Introduced a method to get the softest score of one."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method S org.optaplanner.core.impl.score.definition.ScoreDefinition<S extends org.optaplanner.core.api.score.Score<S extends org.optaplanner.core.api.score.Score<S>>>::divideBySanitizedDivisor(S, S) @ org.optaplanner.core.api.domain.solution.PlanningScore.NullScoreDefinition",
          "package": "org.optaplanner.core.api.domain.solution",
          "classSimpleName": "NullScoreDefinition",
          "methodName": "divideBySanitizedDivisor",
          "elementKind": "method",
          "justification": "Introduced a method for score division."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method int org.optaplanner.core.impl.score.definition.ScoreDefinition<S extends org.optaplanner.core.api.score.Score<S extends org.optaplanner.core.api.score.Score<S>>>::getFeasibleLevelsSize() @ org.optaplanner.core.api.domain.solution.PlanningScore.NullScoreDefinition",
          "package": "org.optaplanner.core.api.domain.solution",
          "classSimpleName": "NullScoreDefinition",
          "methodName": "getFeasibleLevelsSize",
          "elementKind": "method",
          "justification": "FeasibilityScoreDefinition is gone in a backwards-compatible manner. This is a red herring."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method java.lang.String org.optaplanner.core.api.score.ScoreManager<Solution_>::explainScore(Solution_)",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "ScoreManager",
          "methodName": "explainScore",
          "elementKind": "method",
          "justification": "New ScoreManager functionality replaces some Solver functionality."
        },
        {
          "code": "java.method.returnTypeChanged",
          "old": "method void org.optaplanner.core.api.score.ScoreManager<Solution_>::updateScore(Solution_)",
          "new": "method org.optaplanner.core.api.score.Score org.optaplanner.core.api.score.ScoreManager<Solution_>::updateScore(Solution_)",
          "oldType": "void",
          "newType": "org.optaplanner.core.api.score.Score",
          "package": "org.optaplanner.core.api.score",
          "classSimpleName": "ScoreManager",
          "methodName": "updateScore",
          "elementKind": "method",
          "justification": "New ScoreManager functionality replaces some Solver functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method java.time.Duration org.optaplanner.core.api.solver.SolverJob<Solution_, ProblemId_>::getSolvingDuration()",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverJob",
          "methodName": "getSolvingDuration",
          "elementKind": "method",
          "justification": "New ScoreManager functionality replaces some Solver functionality."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method boolean org.optaplanner.core.impl.score.definition.ScoreDefinition<S extends org.optaplanner.core.api.score.Score<S extends org.optaplanner.core.api.score.Score<S>>>::isCompatibleArithmeticArgument(org.optaplanner.core.api.score.Score) @ org.optaplanner.core.api.domain.solution.PlanningScore.NullScoreDefinition",
          "package": "org.optaplanner.core.api.domain.solution",
          "classSimpleName": "NullScoreDefinition",
          "methodName": "isCompatibleArithmeticArgument",
          "elementKind": "method",
          "justification": "ScoreDefinition is not public API, even though it leaks."
        },
        {
          "code": "java.annotation.added",
          "old": "class org.optaplanner.core.config.AbstractConfig<C extends org.optaplanner.core.config.AbstractConfig>",
          "new": "class org.optaplanner.core.config.AbstractConfig<C extends org.optaplanner.core.config.AbstractConfig>",
          "annotationType": "javax.xml.bind.annotation.XmlAccessorType",
          "annotation": "@javax.xml.bind.annotation.XmlAccessorType(javax.xml.bind.annotation.XmlAccessType.FIELD)",
          "package": "org.optaplanner.core.config",
          "classSimpleName": "AbstractConfig",
          "elementKind": "class",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.entityPlacerConfigList",
          "new": "field org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.entityPlacerConfigList",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"queuedEntityPlacer\", type = org.optaplanner.core.config.constructionheuristic.placer.QueuedEntityPlacerConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"queuedValuePlacer\", type = org.optaplanner.core.config.constructionheuristic.placer.QueuedValuePlacerConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pooledEntityPlacer\", type = org.optaplanner.core.config.constructionheuristic.placer.PooledEntityPlacerConfig.class)})",
          "package": "org.optaplanner.core.config.constructionheuristic",
          "classSimpleName": "ConstructionHeuristicPhaseConfig",
          "fieldName": "entityPlacerConfigList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.foragerConfig",
          "new": "field org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.foragerConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"forager\")",
          "package": "org.optaplanner.core.config.constructionheuristic",
          "classSimpleName": "ConstructionHeuristicPhaseConfig",
          "fieldName": "foragerConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.moveSelectorConfigList",
          "new": "field org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.moveSelectorConfigList",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"cartesianProductMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.composite.CartesianProductMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"changeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.ChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"kOptMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.KOptMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"moveIteratorFactory\", type = org.optaplanner.core.config.heuristic.selector.move.factory.MoveIteratorFactoryConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"moveListFactory\", type = org.optaplanner.core.config.heuristic.selector.move.factory.MoveListFactoryConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pillarChangeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pillarSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"subChainChangeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"subChainSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"swapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.SwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"tailChainSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.TailChainSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"unionMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.composite.UnionMoveSelectorConfig.class)})",
          "package": "org.optaplanner.core.config.constructionheuristic",
          "classSimpleName": "ConstructionHeuristicPhaseConfig",
          "fieldName": "moveSelectorConfigList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicType",
          "new": "enum org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.constructionheuristic",
          "classSimpleName": "ConstructionHeuristicType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.constructionheuristic.decider.forager.ConstructionHeuristicPickEarlyType",
          "new": "enum org.optaplanner.core.config.constructionheuristic.decider.forager.ConstructionHeuristicPickEarlyType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.constructionheuristic.decider.forager",
          "classSimpleName": "ConstructionHeuristicPickEarlyType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "class org.optaplanner.core.config.constructionheuristic.placer.EntityPlacerConfig<C extends org.optaplanner.core.config.constructionheuristic.placer.EntityPlacerConfig>",
          "new": "class org.optaplanner.core.config.constructionheuristic.placer.EntityPlacerConfig<C extends org.optaplanner.core.config.constructionheuristic.placer.EntityPlacerConfig>",
          "annotationType": "javax.xml.bind.annotation.XmlSeeAlso",
          "annotation": "@javax.xml.bind.annotation.XmlSeeAlso({org.optaplanner.core.config.constructionheuristic.placer.QueuedEntityPlacerConfig.class, org.optaplanner.core.config.constructionheuristic.placer.QueuedValuePlacerConfig.class, org.optaplanner.core.config.constructionheuristic.placer.PooledEntityPlacerConfig.class})",
          "package": "org.optaplanner.core.config.constructionheuristic.placer",
          "classSimpleName": "EntityPlacerConfig",
          "elementKind": "class",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.constructionheuristic.placer.QueuedEntityPlacerConfig.entitySelectorConfig",
          "new": "field org.optaplanner.core.config.constructionheuristic.placer.QueuedEntityPlacerConfig.entitySelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"entitySelector\")",
          "package": "org.optaplanner.core.config.constructionheuristic.placer",
          "classSimpleName": "QueuedEntityPlacerConfig",
          "fieldName": "entitySelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.constructionheuristic.placer.QueuedEntityPlacerConfig.moveSelectorConfigList",
          "new": "field org.optaplanner.core.config.constructionheuristic.placer.QueuedEntityPlacerConfig.moveSelectorConfigList",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"cartesianProductMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.composite.CartesianProductMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"changeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.ChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"kOptMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.KOptMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"moveIteratorFactory\", type = org.optaplanner.core.config.heuristic.selector.move.factory.MoveIteratorFactoryConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"moveListFactory\", type = org.optaplanner.core.config.heuristic.selector.move.factory.MoveListFactoryConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pillarChangeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pillarSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"subChainChangeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"subChainSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"swapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.SwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"tailChainSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.TailChainSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"unionMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.composite.UnionMoveSelectorConfig.class)})",
          "package": "org.optaplanner.core.config.constructionheuristic.placer",
          "classSimpleName": "QueuedEntityPlacerConfig",
          "fieldName": "moveSelectorConfigList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.constructionheuristic.placer.QueuedValuePlacerConfig.valueSelectorConfig",
          "new": "field org.optaplanner.core.config.constructionheuristic.placer.QueuedValuePlacerConfig.valueSelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"valueSelector\")",
          "package": "org.optaplanner.core.config.constructionheuristic.placer",
          "classSimpleName": "QueuedValuePlacerConfig",
          "fieldName": "valueSelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.entitySelectorConfig",
          "new": "field org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.entitySelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"entitySelector\")",
          "package": "org.optaplanner.core.config.exhaustivesearch",
          "classSimpleName": "ExhaustiveSearchPhaseConfig",
          "fieldName": "entitySelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.moveSelectorConfig",
          "new": "field org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.moveSelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"cartesianProductMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.composite.CartesianProductMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"changeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.ChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"kOptMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.KOptMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"moveIteratorFactory\", type = org.optaplanner.core.config.heuristic.selector.move.factory.MoveIteratorFactoryConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"moveListFactory\", type = org.optaplanner.core.config.heuristic.selector.move.factory.MoveListFactoryConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pillarChangeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"pillarSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"subChainChangeMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainChangeMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"subChainSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"swapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.SwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"tailChainSwapMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.generic.chained.TailChainSwapMoveSelectorConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"unionMoveSelector\", type = org.optaplanner.core.config.heuristic.selector.move.composite.UnionMoveSelectorConfig.class)})",
          "package": "org.optaplanner.core.config.exhaustivesearch",
          "classSimpleName": "ExhaustiveSearchPhaseConfig",
          "fieldName": "moveSelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchType",
          "new": "enum org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.exhaustivesearch",
          "classSimpleName": "ExhaustiveSearchType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.exhaustivesearch.NodeExplorationType",
          "new": "enum org.optaplanner.core.config.exhaustivesearch.NodeExplorationType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.exhaustivesearch",
          "classSimpleName": "NodeExplorationType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.common.SelectionCacheType",
          "new": "enum org.optaplanner.core.config.heuristic.selector.common.SelectionCacheType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.common",
          "classSimpleName": "SelectionCacheType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.common.SelectionOrder",
          "new": "enum org.optaplanner.core.config.heuristic.selector.common.SelectionOrder",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.common",
          "classSimpleName": "SelectionOrder",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.common.decorator.SelectionSorterOrder",
          "new": "enum org.optaplanner.core.config.heuristic.selector.common.decorator.SelectionSorterOrder",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.common.decorator",
          "classSimpleName": "SelectionSorterOrder",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.common.nearby.NearbySelectionConfig.originEntitySelectorConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.common.nearby.NearbySelectionConfig.originEntitySelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"originEntitySelector\")",
          "package": "org.optaplanner.core.config.heuristic.selector.common.nearby",
          "classSimpleName": "NearbySelectionConfig",
          "fieldName": "originEntitySelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.common.nearby.NearbySelectionDistributionType",
          "new": "enum org.optaplanner.core.config.heuristic.selector.common.nearby.NearbySelectionDistributionType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.common.nearby",
          "classSimpleName": "NearbySelectionDistributionType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.filterClassList",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySelectorConfig",
          "fieldName": "filterClassList",
          "elementKind": "field",
          "justification": "OptaPlanner now support only a single selection filter class."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.id",
          "new": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.id",
          "annotationType": "javax.xml.bind.annotation.XmlAttribute",
          "annotation": "@javax.xml.bind.annotation.XmlAttribute",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySelectorConfig",
          "fieldName": "id",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.mimicSelectorRef",
          "new": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.mimicSelectorRef",
          "annotationType": "javax.xml.bind.annotation.XmlAttribute",
          "annotation": "@javax.xml.bind.annotation.XmlAttribute",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySelectorConfig",
          "fieldName": "mimicSelectorRef",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.nearbySelectionConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig.nearbySelectionConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"nearbySelection\")",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySelectorConfig",
          "fieldName": "nearbySelectionConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.method.removed",
          "old": "method java.util.List<java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter>> org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig::getFilterClassList()",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySelectorConfig",
          "methodName": "getFilterClassList",
          "elementKind": "method",
          "justification": "OptaPlanner now support only a single selection filter class."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.heuristic.selector.entity.EntitySelectorConfig::setFilterClassList(java.util.List<java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter>>)",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySelectorConfig",
          "methodName": "setFilterClassList",
          "elementKind": "method",
          "justification": "OptaPlanner now support only a single selection filter class."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.entity.EntitySorterManner",
          "new": "enum org.optaplanner.core.config.heuristic.selector.entity.EntitySorterManner",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.entity",
          "classSimpleName": "EntitySorterManner",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.entity.pillar.PillarSelectorConfig.entitySelectorConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.entity.pillar.PillarSelectorConfig.entitySelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"entitySelector\")",
          "package": "org.optaplanner.core.config.heuristic.selector.entity.pillar",
          "classSimpleName": "PillarSelectorConfig",
          "fieldName": "entitySelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig>.filterClassList",
          "package": "org.optaplanner.core.config.heuristic.selector.move",
          "classSimpleName": "MoveSelectorConfig",
          "fieldName": "filterClassList",
          "elementKind": "field",
          "justification": "OptaPlanner now support only a single selection filter class."
        },
        {
          "code": "java.method.removed",
          "old": "method java.util.List<java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter>> org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig>::getFilterClassList()",
          "package": "org.optaplanner.core.config.heuristic.selector.move",
          "classSimpleName": "MoveSelectorConfig",
          "methodName": "getFilterClassList",
          "elementKind": "method",
          "justification": "OptaPlanner now support only a single selection filter class."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig>::setFilterClassList(java.util.List<java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter>>)",
          "package": "org.optaplanner.core.config.heuristic.selector.move",
          "classSimpleName": "MoveSelectorConfig",
          "methodName": "setFilterClassList",
          "elementKind": "method",
          "justification": "OptaPlanner now support only a single selection filter class."
        },
        {
          "code": "java.annotation.added",
          "old": "class org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig>",
          "new": "class org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.MoveSelectorConfig>",
          "annotationType": "javax.xml.bind.annotation.XmlSeeAlso",
          "annotation": "@javax.xml.bind.annotation.XmlSeeAlso({org.optaplanner.core.config.heuristic.selector.move.composite.UnionMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.composite.CartesianProductMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.ChangeMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.SwapMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.chained.TailChainSwapMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.chained.KOptMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainChangeMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.generic.chained.SubChainSwapMoveSelectorConfig.class, org.optaplanner.core.config.heuristic.selector.move.factory.MoveListFactoryConfig.class, org.optaplanner.core.config.heuristic.selector.move.factory.MoveIteratorFactoryConfig.class})",
          "package": "org.optaplanner.core.config.heuristic.selector.move",
          "classSimpleName": "MoveSelectorConfig",
          "elementKind": "class",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.move.factory.MoveIteratorFactoryConfig.moveIteratorFactoryCustomProperties",
          "new": "field org.optaplanner.core.config.heuristic.selector.move.factory.MoveIteratorFactoryConfig.moveIteratorFactoryCustomProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.heuristic.selector.move.factory",
          "classSimpleName": "MoveIteratorFactoryConfig",
          "fieldName": "moveIteratorFactoryCustomProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.move.factory.MoveListFactoryConfig.moveListFactoryCustomProperties",
          "new": "field org.optaplanner.core.config.heuristic.selector.move.factory.MoveListFactoryConfig.moveListFactoryCustomProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.heuristic.selector.move.factory",
          "classSimpleName": "MoveListFactoryConfig",
          "fieldName": "moveListFactoryCustomProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C>>>.pillarSelectorConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C>>>.pillarSelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"pillarSelector\")",
          "package": "org.optaplanner.core.config.heuristic.selector.move.generic",
          "classSimpleName": "AbstractPillarMoveSelectorConfig",
          "fieldName": "pillarSelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C>>>.pillarSelectorConfig @ org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C>>>.pillarSelectorConfig @ org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"pillarSelector\")",
          "package": "org.optaplanner.core.config.heuristic.selector.move.generic",
          "classSimpleName": "PillarChangeMoveSelectorConfig",
          "fieldName": "pillarSelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C>>>.pillarSelectorConfig @ org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C extends org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<C>>>.pillarSelectorConfig @ org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"pillarSelector\")",
          "package": "org.optaplanner.core.config.heuristic.selector.move.generic",
          "classSimpleName": "PillarSwapMoveSelectorConfig",
          "fieldName": "pillarSelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.move.generic.SubPillarType",
          "new": "enum org.optaplanner.core.config.heuristic.selector.move.generic.SubPillarType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.move.generic",
          "classSimpleName": "SubPillarType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.filterClassList",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "fieldName": "filterClassList",
          "elementKind": "field",
          "justification": "OptaPlanner now support only a single selection filter class."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.id",
          "new": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.id",
          "annotationType": "javax.xml.bind.annotation.XmlAttribute",
          "annotation": "@javax.xml.bind.annotation.XmlAttribute",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "fieldName": "id",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.mimicSelectorRef",
          "new": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.mimicSelectorRef",
          "annotationType": "javax.xml.bind.annotation.XmlAttribute",
          "annotation": "@javax.xml.bind.annotation.XmlAttribute",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "fieldName": "mimicSelectorRef",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.nearbySelectionConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.nearbySelectionConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"nearbySelection\")",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "fieldName": "nearbySelectionConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.variableName",
          "new": "field org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig.variableName",
          "annotationType": "javax.xml.bind.annotation.XmlAttribute",
          "annotation": "@javax.xml.bind.annotation.XmlAttribute",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "fieldName": "variableName",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.method.removed",
          "old": "method java.util.List<java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter>> org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig::getFilterClassList()",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "methodName": "getFilterClassList",
          "elementKind": "method",
          "justification": "OptaPlanner now support only a single selection filter class."
        },
        {
          "code": "java.method.removed",
          "old": "method void org.optaplanner.core.config.heuristic.selector.value.ValueSelectorConfig::setFilterClassList(java.util.List<java.lang.Class<? extends org.optaplanner.core.impl.heuristic.selector.common.decorator.SelectionFilter>>)",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSelectorConfig",
          "methodName": "setFilterClassList",
          "elementKind": "method",
          "justification": "OptaPlanner now support only a single selection filter class."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.heuristic.selector.value.ValueSorterManner",
          "new": "enum org.optaplanner.core.config.heuristic.selector.value.ValueSorterManner",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.heuristic.selector.value",
          "classSimpleName": "ValueSorterManner",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.heuristic.selector.value.chained.SubChainSelectorConfig.valueSelectorConfig",
          "new": "field org.optaplanner.core.config.heuristic.selector.value.chained.SubChainSelectorConfig.valueSelectorConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"valueSelector\")",
          "package": "org.optaplanner.core.config.heuristic.selector.value.chained",
          "classSimpleName": "SubChainSelectorConfig",
          "fieldName": "valueSelectorConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.method.returnTypeChanged",
          "old": "method org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorConfig org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig::getAcceptorConfig()",
          "new": "method org.optaplanner.core.config.localsearch.decider.acceptor.LocalSearchAcceptorConfig org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig::getAcceptorConfig()",
          "oldType": "org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorConfig",
          "newType": "org.optaplanner.core.config.localsearch.decider.acceptor.LocalSearchAcceptorConfig",
          "package": "org.optaplanner.core.config.localsearch",
          "classSimpleName": "LocalSearchPhaseConfig",
          "methodName": "getAcceptorConfig",
          "elementKind": "method",
          "justification": "AcceptorConfig class has been renamed to LocalSearchAcceptorConfig."
        },
        {
          "code": "java.method.parameterTypeChanged",
          "old": "parameter void org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig::setAcceptorConfig(===org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorConfig===)",
          "new": "parameter void org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig::setAcceptorConfig(===org.optaplanner.core.config.localsearch.decider.acceptor.LocalSearchAcceptorConfig===)",
          "oldType": "org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorConfig",
          "newType": "org.optaplanner.core.config.localsearch.decider.acceptor.LocalSearchAcceptorConfig",
          "package": "org.optaplanner.core.config.localsearch",
          "classSimpleName": "LocalSearchPhaseConfig",
          "methodName": "setAcceptorConfig",
          "parameterIndex": "0",
          "elementKind": "parameter",
          "justification": "AcceptorConfig class has been renamed to LocalSearchAcceptorConfig."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.localsearch.LocalSearchType",
          "new": "enum org.optaplanner.core.config.localsearch.LocalSearchType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.localsearch",
          "classSimpleName": "LocalSearchType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.class.removed",
          "old": "class org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorConfig",
          "package": "org.optaplanner.core.config.localsearch.decider.acceptor",
          "classSimpleName": "AcceptorConfig",
          "elementKind": "class",
          "justification": "AcceptorConfig class has been renamed to LocalSearchAcceptorConfig."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType",
          "new": "enum org.optaplanner.core.config.localsearch.decider.acceptor.AcceptorType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.localsearch.decider.acceptor",
          "classSimpleName": "AcceptorType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.localsearch.decider.acceptor.stepcountinghillclimbing.StepCountingHillClimbingType",
          "new": "enum org.optaplanner.core.config.localsearch.decider.acceptor.stepcountinghillclimbing.StepCountingHillClimbingType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.localsearch.decider.acceptor.stepcountinghillclimbing",
          "classSimpleName": "StepCountingHillClimbingType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.localsearch.decider.forager.FinalistPodiumType",
          "new": "enum org.optaplanner.core.config.localsearch.decider.forager.FinalistPodiumType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.localsearch.decider.forager",
          "classSimpleName": "FinalistPodiumType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.localsearch.decider.forager.LocalSearchPickEarlyType",
          "new": "enum org.optaplanner.core.config.localsearch.decider.forager.LocalSearchPickEarlyType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.localsearch.decider.forager",
          "classSimpleName": "LocalSearchPickEarlyType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.phaseConfigList",
          "new": "field org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.phaseConfigList",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"constructionHeuristic\", type = org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"customPhase\", type = org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"exhaustiveSearch\", type = org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"localSearch\", type = org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"noChangePhase\", type = org.optaplanner.core.config.phase.NoChangePhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"partitionedSearch\", type = org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class)})",
          "package": "org.optaplanner.core.config.partitionedsearch",
          "classSimpleName": "PartitionedSearchPhaseConfig",
          "fieldName": "phaseConfigList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.solutionPartitionerCustomProperties",
          "new": "field org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.solutionPartitionerCustomProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.partitionedsearch",
          "classSimpleName": "PartitionedSearchPhaseConfig",
          "fieldName": "solutionPartitionerCustomProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "class org.optaplanner.core.config.phase.PhaseConfig<C extends org.optaplanner.core.config.phase.PhaseConfig>",
          "new": "class org.optaplanner.core.config.phase.PhaseConfig<C extends org.optaplanner.core.config.phase.PhaseConfig>",
          "annotationType": "javax.xml.bind.annotation.XmlSeeAlso",
          "annotation": "@javax.xml.bind.annotation.XmlSeeAlso({org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class, org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class, org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class, org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class, org.optaplanner.core.config.phase.NoChangePhaseConfig.class, org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class})",
          "package": "org.optaplanner.core.config.phase",
          "classSimpleName": "PhaseConfig",
          "elementKind": "class",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.phase.custom.CustomPhaseConfig.customPhaseCommandClassList",
          "new": "field org.optaplanner.core.config.phase.custom.CustomPhaseConfig.customPhaseCommandClassList",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"customPhaseCommandClass\")",
          "package": "org.optaplanner.core.config.phase.custom",
          "classSimpleName": "CustomPhaseConfig",
          "fieldName": "customPhaseCommandClassList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.phase.custom.CustomPhaseConfig.customPhaseCommandList",
          "new": "field org.optaplanner.core.config.phase.custom.CustomPhaseConfig.customPhaseCommandList",
          "annotationType": "javax.xml.bind.annotation.XmlTransient",
          "annotation": "@javax.xml.bind.annotation.XmlTransient",
          "package": "org.optaplanner.core.config.phase.custom",
          "classSimpleName": "CustomPhaseConfig",
          "fieldName": "customPhaseCommandList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.phase.custom.CustomPhaseConfig.customProperties",
          "new": "field org.optaplanner.core.config.phase.custom.CustomPhaseConfig.customProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.phase.custom",
          "classSimpleName": "CustomPhaseConfig",
          "fieldName": "customProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.score.definition.ScoreDefinitionType",
          "new": "enum org.optaplanner.core.config.score.definition.ScoreDefinitionType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.score.definition",
          "classSimpleName": "ScoreDefinitionType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.assertionScoreDirectorFactory",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.assertionScoreDirectorFactory",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"assertionScoreDirectorFactory\")",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "assertionScoreDirectorFactory",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.constraintProviderCustomProperties",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.constraintProviderCustomProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "constraintProviderCustomProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.easyScoreCalculatorCustomProperties",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.easyScoreCalculatorCustomProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "easyScoreCalculatorCustomProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.incrementalScoreCalculatorCustomProperties",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.incrementalScoreCalculatorCustomProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "incrementalScoreCalculatorCustomProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.kieBaseConfigurationProperties",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.kieBaseConfigurationProperties",
          "annotationType": "javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter",
          "annotation": "@javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter(org.optaplanner.core.impl.util.JaxbCustomPropertiesAdapter.class)",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "kieBaseConfigurationProperties",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.scoreDrlFileList",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.scoreDrlFileList",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"scoreDrlFile\")",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "scoreDrlFileList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.scoreDrlList",
          "new": "field org.optaplanner.core.config.score.director.ScoreDirectorFactoryConfig.scoreDrlList",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"scoreDrl\")",
          "package": "org.optaplanner.core.config.score.director",
          "classSimpleName": "ScoreDirectorFactoryConfig",
          "fieldName": "scoreDrlList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.score.trend.InitializingScoreTrendLevel",
          "new": "enum org.optaplanner.core.config.score.trend.InitializingScoreTrendLevel",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.score.trend",
          "classSimpleName": "InitializingScoreTrendLevel",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.solver.EnvironmentMode",
          "new": "enum org.optaplanner.core.config.solver.EnvironmentMode",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "EnvironmentMode",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.solver.SolverConfig.entityClassList",
          "new": "field org.optaplanner.core.config.solver.SolverConfig.entityClassList",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"entityClass\")",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "SolverConfig",
          "fieldName": "entityClassList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.solver.SolverConfig.phaseConfigList",
          "new": "field org.optaplanner.core.config.solver.SolverConfig.phaseConfigList",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"constructionHeuristic\", type = org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"customPhase\", type = org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"exhaustiveSearch\", type = org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"localSearch\", type = org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"noChangePhase\", type = org.optaplanner.core.config.phase.NoChangePhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"partitionedSearch\", type = org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class)})",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "SolverConfig",
          "fieldName": "phaseConfigList",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "field org.optaplanner.core.config.solver.SolverConfig.scoreDirectorFactoryConfig",
          "new": "field org.optaplanner.core.config.solver.SolverConfig.scoreDirectorFactoryConfig",
          "annotationType": "javax.xml.bind.annotation.XmlElement",
          "annotation": "@javax.xml.bind.annotation.XmlElement(name = \"scoreDirectorFactory\")",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "SolverConfig",
          "fieldName": "scoreDirectorFactoryConfig",
          "elementKind": "field",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "class org.optaplanner.core.config.solver.SolverConfig",
          "new": "class org.optaplanner.core.config.solver.SolverConfig",
          "annotationType": "javax.xml.bind.annotation.XmlRootElement",
          "annotation": "@javax.xml.bind.annotation.XmlRootElement(name = \"solver\")",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "SolverConfig",
          "elementKind": "class",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.solver.random.RandomType",
          "new": "enum org.optaplanner.core.config.solver.random.RandomType",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.solver.random",
          "classSimpleName": "RandomType",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        },
        {
          "code": "java.annotation.added",
          "old": "enum org.optaplanner.core.config.solver.termination.TerminationCompositionStyle",
          "new": "enum org.optaplanner.core.config.solver.termination.TerminationCompositionStyle",
          "annotationType": "javax.xml.bind.annotation.XmlEnum",
          "annotation": "@javax.xml.bind.annotation.XmlEnum",
          "package": "org.optaplanner.core.config.solver.termination",
          "classSimpleName": "TerminationCompositionStyle",
          "elementKind": "enum",
          "justification": "SolverConfig is serializable via JAXB."
        }
      ]
    }
  }
}
