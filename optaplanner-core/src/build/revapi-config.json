{
  "filters": {
    "revapi": {
      "filter": {
        "elements": {
          "exclude": [
            "method .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*",
            "parameter .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*"
          ]
        }
      },
      "java": {
        "filter": {
          "packages": {
            "comment": "We don't want to check transitive classes, since we already check them in their own module.",
            "regex": true,
            "include": [
              "org\\.optaplanner\\.core\\.api.*",
              "org\\.optaplanner\\.core\\.config.*"
            ]
          }
        }
      }
    }
  },

  "ignores": {
    "revapi": {
      "_comment": "Changes between 7.5.0.Final and the current branch. These changes are desired and thus ignored.",
      "ignore": [
        {
          "code": "java.method.returnTypeChanged",
          "old": "method boolean org.optaplanner.core.api.score.constraint.Indictment::addConstraintMatch(org.optaplanner.core.api.score.constraint.ConstraintMatch)",
          "new": "method void org.optaplanner.core.api.score.constraint.Indictment::addConstraintMatch(org.optaplanner.core.api.score.constraint.ConstraintMatch)",
          "oldType": "boolean",
          "newType": "void",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "methodName": "addConstraintMatch",
          "elementKind": "method",
          "justification": "After fixing PLANNER-965, this method can only return true or fail fast, so keeping the contract would only trade a compile time error for a runtime exception."
        },
        {
          "code": "java.class.removed",
          "old": "enum org.optaplanner.core.config.util.ConfigUtils.MemberAccessorType",
          "package": "org.optaplanner.core.config.util",
          "classSimpleName": "MemberAccessorType",
          "elementKind": "enum",
          "justification": "Internal utility enum moved to MemberAccessorFactory"
        },
        {
          "code": "java.method.returnTypeTypeParametersChanged",
          "old": "method java.lang.Class<? extends org.optaplanner.core.impl.localsearch.decider.forager.Forager> org.optaplanner.core.config.localsearch.decider.forager.LocalSearchForagerConfig::getForagerClass()",
          "new": "method java.lang.Class<? extends org.optaplanner.core.impl.localsearch.decider.forager.LocalSearchForager> org.optaplanner.core.config.localsearch.decider.forager.LocalSearchForagerConfig::getForagerClass()",
          "oldType": "java.lang.Class<? extends org.optaplanner.core.impl.localsearch.decider.forager.Forager>",
          "newType": "java.lang.Class<? extends org.optaplanner.core.impl.localsearch.decider.forager.LocalSearchForager>",
          "package": "org.optaplanner.core.config.localsearch.decider.forager",
          "classSimpleName": "LocalSearchForagerConfig",
          "methodName": "getForagerClass",
          "elementKind": "method",
          "justification": "Non-api class changed name. The exposure of this class in the API is now deprecated and will be removed in 8.0."
        },
        {
          "code": "java.method.parameterTypeParameterChanged",
          "old": "parameter void org.optaplanner.core.config.localsearch.decider.forager.LocalSearchForagerConfig::setForagerClass(===java.lang.Class<? extends org.optaplanner.core.impl.localsearch.decider.forager.Forager>===)",
          "new": "parameter void org.optaplanner.core.config.localsearch.decider.forager.LocalSearchForagerConfig::setForagerClass(===java.lang.Class<? extends org.optaplanner.core.impl.localsearch.decider.forager.LocalSearchForager>===)",
          "oldType": "java.lang.Class<? extends org.optaplanner.core.impl.localsearch.decider.forager.Forager>",
          "newType": "java.lang.Class<? extends org.optaplanner.core.impl.localsearch.decider.forager.LocalSearchForager>",
          "package": "org.optaplanner.core.config.localsearch.decider.forager",
          "classSimpleName": "LocalSearchForagerConfig",
          "methodName": "setForagerClass",
          "parameterIndex": "0",
          "elementKind": "parameter",
          "justification": "Non-api class changed name. The exposure of this class in the API is now deprecated and will be removed in 8.0."
        },
        {
          "code": "java.field.visibilityReduced",
          "old": "field org.optaplanner.core.api.score.constraint.ConstraintMatch.constraintName",
          "new": "field org.optaplanner.core.api.score.constraint.ConstraintMatch.constraintName",
          "oldVisibility": "protected",
          "newVisibility": "private",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatch",
          "fieldName": "constraintName",
          "elementKind": "field",
          "justification": "Protected field in final class has become private."
        },
        {
          "code": "java.field.visibilityReduced",
          "old": "field org.optaplanner.core.api.score.constraint.ConstraintMatch.constraintPackage",
          "new": "field org.optaplanner.core.api.score.constraint.ConstraintMatch.constraintPackage",
          "oldVisibility": "protected",
          "newVisibility": "private",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatch",
          "fieldName": "constraintPackage",
          "elementKind": "field",
          "justification": "Protected field in final class has become private."
        },
        {
          "code": "java.field.visibilityReduced",
          "old": "field org.optaplanner.core.api.score.constraint.ConstraintMatch.justificationList",
          "new": "field org.optaplanner.core.api.score.constraint.ConstraintMatch.justificationList",
          "oldVisibility": "protected",
          "newVisibility": "private",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatch",
          "fieldName": "justificationList",
          "elementKind": "field",
          "justification": "Protected field in final class has become private."
        },
        {
          "code": "java.field.visibilityReduced",
          "old": "field org.optaplanner.core.api.score.constraint.ConstraintMatch.score",
          "new": "field org.optaplanner.core.api.score.constraint.ConstraintMatch.score",
          "oldVisibility": "protected",
          "newVisibility": "private",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatch",
          "fieldName": "score",
          "elementKind": "field",
          "justification": "Protected field in final class has become private."
        },
        {
          "code": "java.field.visibilityReduced",
          "old": "field org.optaplanner.core.api.score.constraint.ConstraintMatchTotal.constraintMatchSet",
          "new": "field org.optaplanner.core.api.score.constraint.ConstraintMatchTotal.constraintMatchSet",
          "oldVisibility": "protected",
          "newVisibility": "private",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "fieldName": "constraintMatchSet",
          "elementKind": "field",
          "justification": "Protected field in final class has become private."
        },
        {
          "code": "java.field.visibilityReduced",
          "old": "field org.optaplanner.core.api.score.constraint.ConstraintMatchTotal.constraintName",
          "new": "field org.optaplanner.core.api.score.constraint.ConstraintMatchTotal.constraintName",
          "oldVisibility": "protected",
          "newVisibility": "private",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "fieldName": "constraintName",
          "elementKind": "field",
          "justification": "Protected field in final class has become private."
        },
        {
          "code": "java.field.visibilityReduced",
          "old": "field org.optaplanner.core.api.score.constraint.ConstraintMatchTotal.constraintPackage",
          "new": "field org.optaplanner.core.api.score.constraint.ConstraintMatchTotal.constraintPackage",
          "oldVisibility": "protected",
          "newVisibility": "private",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "fieldName": "constraintPackage",
          "elementKind": "field",
          "justification": "Protected field in final class has become private."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.api.score.constraint.ConstraintMatchTotal.scoreTotal",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "ConstraintMatchTotal",
          "fieldName": "scoreTotal",
          "elementKind": "field",
          "justification": "Protected field in final class has been renamed to score."
        },
        {
          "code": "java.field.visibilityReduced",
          "old": "field org.optaplanner.core.api.score.constraint.Indictment.constraintMatchSet",
          "new": "field org.optaplanner.core.api.score.constraint.Indictment.constraintMatchSet",
          "oldVisibility": "protected",
          "newVisibility": "private",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "fieldName": "constraintMatchSet",
          "elementKind": "field",
          "justification": "Protected field in final class has become private."
        },
        {
          "code": "java.field.visibilityReduced",
          "old": "field org.optaplanner.core.api.score.constraint.Indictment.justification",
          "new": "field org.optaplanner.core.api.score.constraint.Indictment.justification",
          "oldVisibility": "protected",
          "newVisibility": "private",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "fieldName": "justification",
          "elementKind": "field",
          "justification": "Protected field in final class has become private."
        },
        {
          "code": "java.field.removed",
          "old": "field org.optaplanner.core.api.score.constraint.Indictment.scoreTotal",
          "package": "org.optaplanner.core.api.score.constraint",
          "classSimpleName": "Indictment",
          "fieldName": "scoreTotal",
          "elementKind": "field",
          "justification": "Protected field in final class has been renamed to score."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method java.lang.String org.optaplanner.core.api.solver.Solver<Solution_>::explainBestScore()",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "Solver",
          "methodName": "explainBestScore",
          "elementKind": "method",
          "justification": "New method of Solvers."
        }

      ]
    }
  }
}
