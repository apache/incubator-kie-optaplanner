{
  "filters": {
    "revapi": {
      "filter": {
        "elements": {
          "exclude": [
            "method .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*",
            "parameter .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*"
          ]
        }
      },
      "java": {
        "filter": {
          "packages": {
            "comment": "We don't want to check transitive classes, since we already check them in their own module.",
            "regex": true,
            "include": [
              "org\\.optaplanner\\.core\\.api.*",
              "org\\.optaplanner\\.core\\.config.*"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 7.26.0.Final and the current branch. These changes are desired and thus ignored.",
      "ignore": [
        {
          "code": "java.method.addedToInterface",
          "new": "method <ResultContainer_, Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::groupBy(org.optaplanner.core.api.score.stream.uni.UniConstraintCollector<A, ResultContainer_, Result_>)",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "groupBy",
          "elementKind": "method",
          "justification": "We removed an unused generic type binding on a class that has no external implementors."
        },
        {
          "code": "java.class.nonFinalClassInheritsFromNewClass",
          "old": "class org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig",
          "new": "class org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig",
          "superClass": "org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<org.optaplanner.core.config.heuristic.selector.move.generic.PillarChangeMoveSelectorConfig>",
          "package": "org.optaplanner.core.config.heuristic.selector.move.generic",
          "classSimpleName": "PillarChangeMoveSelectorConfig",
          "elementKind": "class",
          "justification": "Pillar moves now share some properties."
        },
        {
          "code": "java.class.nonFinalClassInheritsFromNewClass",
          "old": "class org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig",
          "new": "class org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig",
          "superClass": "org.optaplanner.core.config.heuristic.selector.move.generic.AbstractPillarMoveSelectorConfig<org.optaplanner.core.config.heuristic.selector.move.generic.PillarSwapMoveSelectorConfig>",
          "package": "org.optaplanner.core.config.heuristic.selector.move.generic",
          "classSimpleName": "PillarSwapMoveSelectorConfig",
          "elementKind": "class",
          "justification": "Pillar moves now share some properties."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method <GroupKey_, ResultContainer_, Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::groupBy(org.optaplanner.core.api.score.stream.uni.UniConstraintCollector<A, ResultContainer_, Result_>)",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "groupBy",
          "elementKind": "method",
          "justification": "API method proposal to group by collector only"
        },
        {
          "code": "java.method.abstractMethodAdded",
          "new": "method org.optaplanner.core.impl.score.director.ScoreDirectorFactory<Solution_> org.optaplanner.core.api.solver.SolverFactory<Solution_>::getScoreDirectorFactory()",
          "package": "org.optaplanner.core.api.solver",
          "classSimpleName": "SolverFactory",
          "methodName": "getScoreDirectorFactory",
          "elementKind": "method",
          "justification": "Replaces Solver.getScoreDirectorFactory()"
        },
        {
          "code": "java.method.removed",
          "old": "method java.lang.ClassLoader org.optaplanner.core.config.SolverConfigContext::getClassLoader()",
          "package": "org.optaplanner.core.config",
          "classSimpleName": "SolverConfigContext",
          "methodName": "getClassLoader",
          "elementKind": "method",
          "justification": "Replaced by SolverConfig.getClassLoader(). SolverConfigContext isn't public API."
        },
        {
          "code": "java.method.removed",
          "old": "method <A, B, Property_> org.optaplanner.core.api.score.stream.bi.BiJoiner<A, B> org.optaplanner.core.api.score.stream.Joiners::containing(java.util.function.Function<A, ? extends java.util.Collection<Property_>>, java.util.function.Function<B, Property_>)",
          "package": "org.optaplanner.core.api.score.stream",
          "classSimpleName": "Joiners",
          "methodName": "containing",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        },
        {
          "code": "java.method.removed",
          "old": "method <A, Property_> org.optaplanner.core.api.score.stream.bi.BiJoiner<A, A> org.optaplanner.core.api.score.stream.Joiners::disjoint(java.util.function.Function<A, ? extends java.util.Collection<Property_>>)",
          "package": "org.optaplanner.core.api.score.stream",
          "classSimpleName": "Joiners",
          "methodName": "disjoint",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        },
        {
          "code": "java.method.removed",
          "old": "method <A, B, Property_> org.optaplanner.core.api.score.stream.bi.BiJoiner<A, B> org.optaplanner.core.api.score.stream.Joiners::disjoint(java.util.function.Function<A, ? extends java.util.Collection<Property_>>, java.util.function.Function<B, ? extends java.util.Collection<Property_>>)",
          "package": "org.optaplanner.core.api.score.stream",
          "classSimpleName": "Joiners",
          "methodName": "disjoint",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        },
        {
          "code": "java.method.removed",
          "old": "method <A, Property_> org.optaplanner.core.api.score.stream.bi.BiJoiner<A, A> org.optaplanner.core.api.score.stream.Joiners::intersecting(java.util.function.Function<A, ? extends java.util.Collection<Property_>>)",
          "package": "org.optaplanner.core.api.score.stream",
          "classSimpleName": "Joiners",
          "methodName": "intersecting",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        },
        {
          "code": "java.method.removed",
          "old": "method <A, B, Property_> org.optaplanner.core.api.score.stream.bi.BiJoiner<A, B> org.optaplanner.core.api.score.stream.Joiners::intersecting(java.util.function.Function<A, ? extends java.util.Collection<Property_>>, java.util.function.Function<B, ? extends java.util.Collection<Property_>>)",
          "package": "org.optaplanner.core.api.score.stream",
          "classSimpleName": "Joiners",
          "methodName": "intersecting",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        },
        {
          "code": "java.method.removed",
          "old": "method <GroupKey_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<GroupKey_> org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, B>::groupBy(java.util.function.BiFunction<A, B, GroupKey_>)",
          "package": "org.optaplanner.core.api.score.stream.bi",
          "classSimpleName": "BiConstraintStream",
          "methodName": "groupBy",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        },
        {
          "code": "java.method.removed",
          "old": "method <GroupKeyA_, GroupKeyB_> org.optaplanner.core.api.score.stream.bi.BiConstraintStream<GroupKeyA_, GroupKeyB_> org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, B>::groupBy(java.util.function.BiFunction<A, B, GroupKeyA_>, java.util.function.BiFunction<A, B, GroupKeyB_>)",
          "package": "org.optaplanner.core.api.score.stream.bi",
          "classSimpleName": "BiConstraintStream",
          "methodName": "groupBy",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        },
        {
          "code": "java.method.removed",
          "old": "method <GroupKeyA_, GroupKeyB_, ResultContainer_, Result_> org.optaplanner.core.api.score.stream.tri.TriConstraintStream<GroupKeyA_, GroupKeyB_, Result_> org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, B>::groupBy(java.util.function.BiFunction<A, B, GroupKeyA_>, java.util.function.BiFunction<A, B, GroupKeyB_>, org.optaplanner.core.api.score.stream.bi.BiConstraintCollector<A, B, ResultContainer_, Result_>)",
          "package": "org.optaplanner.core.api.score.stream.bi",
          "classSimpleName": "BiConstraintStream",
          "methodName": "groupBy",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        },
        {
          "code": "java.method.removed",
          "old": "method <GroupKey_, ResultContainer_, Result_> org.optaplanner.core.api.score.stream.bi.BiConstraintStream<GroupKey_, Result_> org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, B>::groupBy(java.util.function.BiFunction<A, B, GroupKey_>, org.optaplanner.core.api.score.stream.bi.BiConstraintCollector<A, B, ResultContainer_, Result_>)",
          "package": "org.optaplanner.core.api.score.stream.bi",
          "classSimpleName": "BiConstraintStream",
          "methodName": "groupBy",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        },
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method <GroupKeyA_, GroupKeyB_, ResultContainer_, Result_> org.optaplanner.core.api.score.stream.tri.TriConstraintStream<GroupKeyA_, GroupKeyB_, Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::groupBy(java.util.function.Function<A, GroupKeyA_>, java.util.function.Function<A, GroupKeyB_>, org.optaplanner.core.api.score.stream.uni.UniConstraintCollector<A, ResultContainer_, Result_>)",
          "new": "method <ResultContainer_, Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::groupBy(org.optaplanner.core.api.score.stream.uni.UniConstraintCollector<A, ResultContainer_, Result_>)",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "groupBy",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        },
        {
          "code": "java.method.returnTypeChanged",
          "old": "method <GroupKeyA_, GroupKeyB_, ResultContainer_, Result_> org.optaplanner.core.api.score.stream.tri.TriConstraintStream<GroupKeyA_, GroupKeyB_, Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::groupBy(java.util.function.Function<A, GroupKeyA_>, java.util.function.Function<A, GroupKeyB_>, org.optaplanner.core.api.score.stream.uni.UniConstraintCollector<A, ResultContainer_, Result_>)",
          "new": "method <ResultContainer_, Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::groupBy(org.optaplanner.core.api.score.stream.uni.UniConstraintCollector<A, ResultContainer_, Result_>)",
          "oldType": "org.optaplanner.core.api.score.stream.tri.TriConstraintStream<GroupKeyA_ extends java.lang.Object, GroupKeyB_ extends java.lang.Object, Result_ extends java.lang.Object>",
          "newType": "org.optaplanner.core.api.score.stream.uni.UniConstraintStream<Result_ extends java.lang.Object>",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "groupBy",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        },
        {
          "code": "java.generics.formalTypeParameterRemoved",
          "old": "method <GroupKeyA_, GroupKeyB_, ResultContainer_, Result_> org.optaplanner.core.api.score.stream.tri.TriConstraintStream<GroupKeyA_, GroupKeyB_, Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::groupBy(java.util.function.Function<A, GroupKeyA_>, java.util.function.Function<A, GroupKeyB_>, org.optaplanner.core.api.score.stream.uni.UniConstraintCollector<A, ResultContainer_, Result_>)",
          "new": "method <ResultContainer_, Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::groupBy(org.optaplanner.core.api.score.stream.uni.UniConstraintCollector<A, ResultContainer_, Result_>)",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "groupBy",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        },
        {
          "code": "java.generics.formalTypeParameterRemoved",
          "old": "method <GroupKeyA_, GroupKeyB_, ResultContainer_, Result_> org.optaplanner.core.api.score.stream.tri.TriConstraintStream<GroupKeyA_, GroupKeyB_, Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::groupBy(java.util.function.Function<A, GroupKeyA_>, java.util.function.Function<A, GroupKeyB_>, org.optaplanner.core.api.score.stream.uni.UniConstraintCollector<A, ResultContainer_, Result_>)",
          "new": "method <ResultContainer_, Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<Result_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::groupBy(org.optaplanner.core.api.score.stream.uni.UniConstraintCollector<A, ResultContainer_, Result_>)",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "groupBy",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        },
        {
          "code": "java.method.removed",
          "old": "method <GroupKeyA_, GroupKeyB_> org.optaplanner.core.api.score.stream.bi.BiConstraintStream<GroupKeyA_, GroupKeyB_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::groupBy(java.util.function.Function<A, GroupKeyA_>, java.util.function.Function<A, GroupKeyB_>)",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "groupBy",
          "elementKind": "method",
          "justification": "Temporarily removed until actually implemented."
        }
      ]
    }
  }
}
