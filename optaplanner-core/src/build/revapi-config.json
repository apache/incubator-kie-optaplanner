{
  "filters": {
    "revapi": {
      "filter": {
        "elements": {
          "exclude": [
            "method .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*",
            "parameter .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*"
          ]
        }
      },
      "java": {
        "filter": {
          "packages": {
            "comment": "We don't want to check transitive classes, since we already check them in their own module.",
            "regex": true,
            "include": [
              "org\\.optaplanner\\.core\\.api.*",
              "org\\.optaplanner\\.core\\.config.*"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 8.5.0.Final and the current branch. These changes are desired and thus ignored.",
      "ignore": [
        {
           "code": "java.method.numberOfParametersChanged",
           "old": "method org.optaplanner.core.impl.score.inliner.ScoreInliner<Score_> org.optaplanner.core.impl.score.definition.ScoreDefinition<Score_ extends org.optaplanner.core.api.score.Score<Score_ extends org.optaplanner.core.api.score.Score<Score_>>>::buildScoreInliner(boolean) @ org.optaplanner.core.api.domain.solution.PlanningScore.NullScoreDefinition",
           "new": "method org.optaplanner.core.impl.score.inliner.ScoreInliner<Score_> org.optaplanner.core.impl.score.definition.ScoreDefinition<Score_ extends org.optaplanner.core.api.score.Score<Score_ extends org.optaplanner.core.api.score.Score<Score_>>>::buildScoreInliner(java.util.Map<org.optaplanner.core.api.score.stream.Constraint, Score_>, boolean) @ org.optaplanner.core.api.domain.solution.PlanningScore.NullScoreDefinition",
           "package": "org.optaplanner.core.api.domain.solution",
           "classSimpleName": "NullScoreDefinition",
           "methodName": "buildScoreInliner",
           "elementKind": "method",
           "justification": "ScoreInliner was refactored. Not really public API."
         },
         {
           "code": "java.method.addedToInterface",
           "new": "method <ResultB_> org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, ResultB_> org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, B>::flattenLast(java.util.function.Function<B, java.lang.Iterable<ResultB_>>)",
           "package": "org.optaplanner.core.api.score.stream.bi",
           "classSimpleName": "BiConstraintStream",
           "methodName": "flattenLast",
           "elementKind": "method",
           "justification": "Constraint Streams API receives flattening support."
         },
         {
           "code": "java.method.addedToInterface",
           "new": "method <ResultD_> org.optaplanner.core.api.score.stream.quad.QuadConstraintStream<A, B, C, ResultD_> org.optaplanner.core.api.score.stream.quad.QuadConstraintStream<A, B, C, D>::flattenLast(java.util.function.Function<D, java.lang.Iterable<ResultD_>>)",
           "package": "org.optaplanner.core.api.score.stream.quad",
           "classSimpleName": "QuadConstraintStream",
           "methodName": "flattenLast",
           "elementKind": "method",
           "justification": "Constraint Streams API receives flattening support."
         },
         {
           "code": "java.method.addedToInterface",
           "new": "method <ResultC_> org.optaplanner.core.api.score.stream.tri.TriConstraintStream<A, B, ResultC_> org.optaplanner.core.api.score.stream.tri.TriConstraintStream<A, B, C>::flattenLast(java.util.function.Function<C, java.lang.Iterable<ResultC_>>)",
           "package": "org.optaplanner.core.api.score.stream.tri",
           "classSimpleName": "TriConstraintStream",
           "methodName": "flattenLast",
           "elementKind": "method",
           "justification": "Constraint Streams API receives flattening support."
         },
         {
           "code": "java.method.addedToInterface",
           "new": "method <ResultA_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<ResultA_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::flattenLast(java.util.function.Function<A, java.lang.Iterable<ResultA_>>)",
           "package": "org.optaplanner.core.api.score.stream.uni",
           "classSimpleName": "UniConstraintStream",
           "methodName": "flattenLast",
           "elementKind": "method",
           "justification": "Constraint Streams API receives flattening support."
         },
         {
           "code": "java.annotation.attributeValueChanged",
           "old": "class org.optaplanner.core.config.solver.SolverConfig",
           "new": "class org.optaplanner.core.config.solver.SolverConfig",
           "annotationType": "javax.xml.bind.annotation.XmlType",
           "annotation": "@javax.xml.bind.annotation.XmlType(name = \"solverConfig\", propOrder = {\"environmentMode\", \"daemon\", \"randomType\", \"randomSeed\", \"randomFactoryClass\", \"moveThreadCount\", \"moveThreadBufferSize\", \"threadFactoryClass\", \"solutionClass\", \"entityClassList\", \"domainAccessType\", \"scoreDirectorFactoryConfig\", \"terminationConfig\", \"phaseConfigList\", \"solverMetricList\"})",
           "attribute": "propOrder",
           "oldValue": "{\"environmentMode\", \"daemon\", \"randomType\", \"randomSeed\", \"randomFactoryClass\", \"moveThreadCount\", \"moveThreadBufferSize\", \"threadFactoryClass\", \"solutionClass\", \"entityClassList\", \"domainAccessType\", \"scoreDirectorFactoryConfig\", \"terminationConfig\", \"phaseConfigList\"}",
           "newValue": "{\"environmentMode\", \"daemon\", \"randomType\", \"randomSeed\", \"randomFactoryClass\", \"moveThreadCount\", \"moveThreadBufferSize\", \"threadFactoryClass\", \"solutionClass\", \"entityClassList\", \"domainAccessType\", \"scoreDirectorFactoryConfig\", \"terminationConfig\", \"phaseConfigList\", \"solverMetricList\"}",
           "package": "org.optaplanner.core.config.solver",
           "classSimpleName": "SolverConfig",
           "elementKind": "class",
           "justification": "Allow enabling metrics via SolverConfig"
         },
         {
            "code": "java.annotation.attributeValueChanged",
            "old": "class org.optaplanner.core.config.solver.SolverConfig",
            "new": "class org.optaplanner.core.config.solver.SolverConfig",
            "annotationType": "javax.xml.bind.annotation.XmlType",
            "annotation": "@javax.xml.bind.annotation.XmlType(name = \"solverConfig\", propOrder = {\"environmentMode\", \"daemon\", \"randomType\", \"randomSeed\", \"randomFactoryClass\", \"moveThreadCount\", \"moveThreadBufferSize\", \"threadFactoryClass\", \"solutionClass\", \"entityClassList\", \"domainAccessType\", \"scoreDirectorFactoryConfig\", \"terminationConfig\", \"phaseConfigList\", \"metricConfig\"})",
            "attribute": "propOrder",
            "oldValue": "{\"environmentMode\", \"daemon\", \"randomType\", \"randomSeed\", \"randomFactoryClass\", \"moveThreadCount\", \"moveThreadBufferSize\", \"threadFactoryClass\", \"solutionClass\", \"entityClassList\", \"domainAccessType\", \"scoreDirectorFactoryConfig\", \"terminationConfig\", \"phaseConfigList\"}",
            "newValue": "{\"environmentMode\", \"daemon\", \"randomType\", \"randomSeed\", \"randomFactoryClass\", \"moveThreadCount\", \"moveThreadBufferSize\", \"threadFactoryClass\", \"solutionClass\", \"entityClassList\", \"domainAccessType\", \"scoreDirectorFactoryConfig\", \"terminationConfig\", \"phaseConfigList\", \"metricConfig\"}",
            "package": "org.optaplanner.core.config.solver",
            "classSimpleName": "SolverConfig",
            "elementKind": "class",
            "justification": "Allow adding custom tags to metrics via SolverConfig"
        },
        {
            "code": "java.annotation.attributeValueChanged",
            "old": "class org.optaplanner.core.config.solver.SolverConfig",
            "new": "class org.optaplanner.core.config.solver.SolverConfig",
            "annotationType": "javax.xml.bind.annotation.XmlType",
            "annotation": "@javax.xml.bind.annotation.XmlType(name = \"solverConfig\", propOrder = {\"environmentMode\", \"daemon\", \"randomType\", \"randomSeed\", \"randomFactoryClass\", \"moveThreadCount\", \"moveThreadBufferSize\", \"threadFactoryClass\", \"monitoringConfig\", \"solutionClass\", \"entityClassList\", \"domainAccessType\", \"scoreDirectorFactoryConfig\", \"terminationConfig\", \"phaseConfigList\"})",
            "attribute": "propOrder",
            "oldValue": "{\"environmentMode\", \"daemon\", \"randomType\", \"randomSeed\", \"randomFactoryClass\", \"moveThreadCount\", \"moveThreadBufferSize\", \"threadFactoryClass\", \"solutionClass\", \"entityClassList\", \"domainAccessType\", \"scoreDirectorFactoryConfig\", \"terminationConfig\", \"phaseConfigList\"}",
            "newValue": "{\"environmentMode\", \"daemon\", \"randomType\", \"randomSeed\", \"randomFactoryClass\", \"moveThreadCount\", \"moveThreadBufferSize\", \"threadFactoryClass\", \"monitoringConfig\", \"solutionClass\", \"entityClassList\", \"domainAccessType\", \"scoreDirectorFactoryConfig\", \"terminationConfig\", \"phaseConfigList\"}",
            "package": "org.optaplanner.core.config.solver",
            "classSimpleName": "SolverConfig",
            "elementKind": "class",
            "justification": "Add MonitoringConfig to XML"
        }
      ]
    }
  }
}
