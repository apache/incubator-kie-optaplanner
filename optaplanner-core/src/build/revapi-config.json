{
  "filters": {
    "revapi": {
      "filter": {
        "elements": {
          "exclude": [
            "method .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*",
            "parameter .* org\\.optaplanner\\.core\\.config.*::(?!(set|get)).*"
          ]
        }
      },
      "java": {
        "filter": {
          "packages": {
            "comment": "We don't want to check transitive classes, since we already check them in their own module.",
            "regex": true,
            "include": [
              "org\\.optaplanner\\.core\\.api.*",
              "org\\.optaplanner\\.core\\.config.*"
            ]
          }
        }
      }
    }
  },
  "ignores": {
    "revapi": {
      "_comment": "Changes between 8.5.0.Final and the current branch. These changes are desired and thus ignored.",
      "ignore": [
        {
          "code": "java.method.numberOfParametersChanged",
          "old": "method org.optaplanner.core.impl.score.inliner.ScoreInliner<Score_> org.optaplanner.core.impl.score.definition.ScoreDefinition<Score_ extends org.optaplanner.core.api.score.Score<Score_ extends org.optaplanner.core.api.score.Score<Score_>>>::buildScoreInliner(boolean) @ org.optaplanner.core.api.domain.solution.PlanningScore.NullScoreDefinition",
          "new": "method org.optaplanner.core.impl.score.inliner.ScoreInliner<Score_> org.optaplanner.core.impl.score.definition.ScoreDefinition<Score_ extends org.optaplanner.core.api.score.Score<Score_ extends org.optaplanner.core.api.score.Score<Score_>>>::buildScoreInliner(java.util.Map<org.optaplanner.core.api.score.stream.Constraint, Score_>, boolean) @ org.optaplanner.core.api.domain.solution.PlanningScore.NullScoreDefinition",
          "package": "org.optaplanner.core.api.domain.solution",
          "classSimpleName": "NullScoreDefinition",
          "methodName": "buildScoreInliner",
          "elementKind": "method",
          "justification": "ScoreInliner was refactored. Not really public API."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method <ResultB_> org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, ResultB_> org.optaplanner.core.api.score.stream.bi.BiConstraintStream<A, B>::flattenLast(java.util.function.Function<B, java.lang.Iterable<ResultB_>>)",
          "package": "org.optaplanner.core.api.score.stream.bi",
          "classSimpleName": "BiConstraintStream",
          "methodName": "flattenLast",
          "elementKind": "method",
          "justification": "Constraint Streams API receives flattening support."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method <ResultD_> org.optaplanner.core.api.score.stream.quad.QuadConstraintStream<A, B, C, ResultD_> org.optaplanner.core.api.score.stream.quad.QuadConstraintStream<A, B, C, D>::flattenLast(java.util.function.Function<D, java.lang.Iterable<ResultD_>>)",
          "package": "org.optaplanner.core.api.score.stream.quad",
          "classSimpleName": "QuadConstraintStream",
          "methodName": "flattenLast",
          "elementKind": "method",
          "justification": "Constraint Streams API receives flattening support."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method <ResultC_> org.optaplanner.core.api.score.stream.tri.TriConstraintStream<A, B, ResultC_> org.optaplanner.core.api.score.stream.tri.TriConstraintStream<A, B, C>::flattenLast(java.util.function.Function<C, java.lang.Iterable<ResultC_>>)",
          "package": "org.optaplanner.core.api.score.stream.tri",
          "classSimpleName": "TriConstraintStream",
          "methodName": "flattenLast",
          "elementKind": "method",
          "justification": "Constraint Streams API receives flattening support."
        },
        {
          "code": "java.method.addedToInterface",
          "new": "method <ResultA_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<ResultA_> org.optaplanner.core.api.score.stream.uni.UniConstraintStream<A>::flattenLast(java.util.function.Function<A, java.lang.Iterable<ResultA_>>)",
          "package": "org.optaplanner.core.api.score.stream.uni",
          "classSimpleName": "UniConstraintStream",
          "methodName": "flattenLast",
          "elementKind": "method",
          "justification": "Constraint Streams API receives flattening support."
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "class org.optaplanner.core.config.phase.PhaseConfig<Config_ extends org.optaplanner.core.config.phase.PhaseConfig<Config_>>",
          "new": "class org.optaplanner.core.config.phase.PhaseConfig<Config_ extends org.optaplanner.core.config.phase.PhaseConfig<Config_>>",
          "annotationType": "javax.xml.bind.annotation.XmlSeeAlso",
          "annotation": "@javax.xml.bind.annotation.XmlSeeAlso({org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class, org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class, org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class, org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class, org.optaplanner.core.config.phase.NoChangePhaseConfig.class, org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class, org.optaplanner.core.config.phase.loop.LoopPhaseConfig.class})",
          "attribute": "value",
          "oldValue": "{org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class, org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class, org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class, org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class, org.optaplanner.core.config.phase.NoChangePhaseConfig.class, org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class}",
          "newValue": "{org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class, org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class, org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class, org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class, org.optaplanner.core.config.phase.NoChangePhaseConfig.class, org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class, org.optaplanner.core.config.phase.loop.LoopPhaseConfig.class}",
          "package": "org.optaplanner.core.config.phase",
          "classSimpleName": "PhaseConfig",
          "elementKind": "class",
          "justification": "Adding loop phase."
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "field org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.phaseConfigList",
          "new": "field org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.phaseConfigList",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"constructionHeuristic\", type = org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"customPhase\", type = org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"exhaustiveSearch\", type = org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"localSearch\", type = org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"noChangePhase\", type = org.optaplanner.core.config.phase.NoChangePhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"partitionedSearch\", type = org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"loop\", type = org.optaplanner.core.config.phase.loop.LoopPhaseConfig.class)})",
          "attribute": "value",
          "oldValue": "{@javax.xml.bind.annotation.XmlElement(name = \"constructionHeuristic\", type = org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"customPhase\", type = org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"exhaustiveSearch\", type = org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"localSearch\", type = org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"noChangePhase\", type = org.optaplanner.core.config.phase.NoChangePhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"partitionedSearch\", type = org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class)}",
          "newValue": "{@javax.xml.bind.annotation.XmlElement(name = \"constructionHeuristic\", type = org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"customPhase\", type = org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"exhaustiveSearch\", type = org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"localSearch\", type = org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"noChangePhase\", type = org.optaplanner.core.config.phase.NoChangePhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"partitionedSearch\", type = org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"loop\", type = org.optaplanner.core.config.phase.loop.LoopPhaseConfig.class)}",
          "package": "org.optaplanner.core.config.partitionedsearch",
          "classSimpleName": "PartitionedSearchPhaseConfig",
          "fieldName": "phaseConfigList",
          "elementKind": "field",
          "justification": "Adding loop phase."
        },
        {
          "code": "java.annotation.attributeValueChanged",
          "old": "field org.optaplanner.core.config.solver.SolverConfig.phaseConfigList",
          "new": "field org.optaplanner.core.config.solver.SolverConfig.phaseConfigList",
          "annotationType": "javax.xml.bind.annotation.XmlElements",
          "annotation": "@javax.xml.bind.annotation.XmlElements({@javax.xml.bind.annotation.XmlElement(name = \"constructionHeuristic\", type = org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"customPhase\", type = org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"exhaustiveSearch\", type = org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"localSearch\", type = org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"noChangePhase\", type = org.optaplanner.core.config.phase.NoChangePhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"partitionedSearch\", type = org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"loop\", type = org.optaplanner.core.config.phase.loop.LoopPhaseConfig.class)})",
          "attribute": "value",
          "oldValue": "{@javax.xml.bind.annotation.XmlElement(name = \"constructionHeuristic\", type = org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"customPhase\", type = org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"exhaustiveSearch\", type = org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"localSearch\", type = org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"noChangePhase\", type = org.optaplanner.core.config.phase.NoChangePhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"partitionedSearch\", type = org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class)}",
          "newValue": "{@javax.xml.bind.annotation.XmlElement(name = \"constructionHeuristic\", type = org.optaplanner.core.config.constructionheuristic.ConstructionHeuristicPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"customPhase\", type = org.optaplanner.core.config.phase.custom.CustomPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"exhaustiveSearch\", type = org.optaplanner.core.config.exhaustivesearch.ExhaustiveSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"localSearch\", type = org.optaplanner.core.config.localsearch.LocalSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"noChangePhase\", type = org.optaplanner.core.config.phase.NoChangePhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"partitionedSearch\", type = org.optaplanner.core.config.partitionedsearch.PartitionedSearchPhaseConfig.class), @javax.xml.bind.annotation.XmlElement(name = \"loop\", type = org.optaplanner.core.config.phase.loop.LoopPhaseConfig.class)}",
          "package": "org.optaplanner.core.config.solver",
          "classSimpleName": "SolverConfig",
          "fieldName": "phaseConfigList",
          "elementKind": "field",
          "justification": "Adding loop phase."
        }
      ]
    }
  }
}
