<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0"
         xsi:schemaLocation="http://docbook.org/ns/docbook http://www.docbook.org/xml/5.0/xsd/docbook.xsd http://www.w3.org/1999/xlink http://www.docbook.org/xml/5.0/xsd/xlink.xsd"
         xml:base="../" xmlns="http://docbook.org/ns/docbook" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:ns="http://docbook.org/ns/docbook">
  <title>Exact methods</title>

  <section>
    <title>Overview</title>

    <para>Exact methods will always find the global optimum and recognize it too. That being said, they don't scale (not
    even beyond toy problems) and are therefor mostly useless.</para>
  </section>

  <section>
    <title>Brute Force</title>

    <section>
      <title>Algorithm description</title>

      <para>The brute force algorithm creates and evaluates every possible solution.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/Chapter-Exact_methods/bruteForceNQueens04.png"></imagedata>
        </imageobject>
      </mediaobject>

      <para>Notice that it creates a search tree that explodes as the problem size increases. <emphasis
      role="bold">Brute force is mostly unusable for a real-world problem due to time limitations.</emphasis></para>
    </section>

    <section>
      <title>Configuration</title>

      <para>Using the brute force algorithm is easy:</para>

      <programlisting>&lt;solver&gt;
  ...
  &lt;bruteForce&gt;
  &lt;/bruteForce&gt;
&lt;/solver&gt;</programlisting>
    </section>
  </section>

  <section>
    <title>Branch and bound</title>

    <section>
      <title>Algorithm description</title>

      <para>Branch and bound is an improvement over brute force, as it prunes away subsets of solutions which cannot
      have a better solution than the best solution already found at that point.</para>

      <mediaobject>
        <imageobject>
          <imagedata fileref="images/Chapter-Exact_methods/branchAndBoundNQueens04.png"></imagedata>
        </imageobject>
      </mediaobject>

      <para>Notice that it (like brute force) creates a search tree that explodes (but less than brute force) as the
      problem size increases. <emphasis role="bold">Branch and bound is mostly unusable for a real-world problem due to
      time limitations.</emphasis></para>

      <para>It can determine a <emphasis>lower bound</emphasis> of problem. A lower bound is a score which is proven to
      be higher than the optimal score of a problem. So it gives an indication of the quality of any best solution found
      for that problem: the closer to best score is to the lower bound, the better.</para>
    </section>

    <section>
      <title>Configuration</title>

      <para>Branch and bound is not yet implemented in Drools Planner. Patches welcome.</para>
    </section>
  </section>
</chapter>
