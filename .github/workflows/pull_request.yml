# Tests PRs on multiple operating systems and Java versions
name: Build Chain

on:
  push:
    branches:
      - main
      - 8.*
    paths-ignore:
      - 'LICENSE*'
      - '.gitignore'
      - '**.md'
      - '**.adoc'
      - '*.txt'
      - '.ci/**'      
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
      - 8.*
    paths-ignore:
      - 'LICENSE*'
      - '.gitignore'
      - '**.md'
      - '**.adoc'
      - '*.txt'
      - '.ci/**'

defaults:
  run:
    shell: bash

jobs:
  build-chain:
    concurrency:
      group: pull_request-${{ github.event_name }}-${{ github.head_ref }}-${{ matrix.os }}-${{ matrix.java-version }}
      cancel-in-progress: true
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java-version: [ 17 ]
        maven-version: ['3.8.1']
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: Maven Build
    timeout-minutes: 120
    steps:
      - name: Setup Maven And Java Version
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: ${{ matrix.java-version }}
          maven-version: ${{ matrix.maven-version }}
      # See https://docs.github.com/en/actions/guides/building-and-testing-java-with-maven#caching-dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-${{ matrix.java-version }}-maven${{ matrix.maven-version }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-${{ matrix.java-version }}-maven${{ matrix.maven-version }}-m2
      - name: Set FLOW_TYPE to pull-request
        if: github.event_name == 'pull_request'
        run: echo "FLOW_TYPE=pull-request" >> $GITHUB_ENV
      - name: Set FLOW_TYPE to branch
        if: github.event_name == 'push'
        run: echo "FLOW_TYPE=branch" >> $GITHUB_ENV
      - name: Build Chain ${{ matrix.java-version }}. Maven ${{ matrix.maven-version }}
        id: build-chain
        uses: kiegroup/github-action-build-chain@test/2.6.11
        with:
          definition-file: https://raw.githubusercontent.com/${GROUP}/kogito-pipelines/main/.ci/pull-request-config.yaml
          starting-project: kiegroup/optaplanner
          flow-type: ${{ env.FLOW_TYPE }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Check Surefire Report
        if: ${{ always() }}
        uses: ScaCap/action-surefire-report@v1.0.10
        with:
          fail_on_test_failures: true
          fail_if_no_tests: false
          skip_publishing: true
          report_paths: '**/*-reports/TEST-*.xml'
