# Tests PRs on multiple operating systems and Java versions

name: OptaPlanner CI

on:
  push:
    branches:
      - master
      - 7.x
  pull_request:
    branches:
      - master
      - 7.x

env:
  # To prevent build failures due to "Connection reset" during artifact download.
  MVN_CONNECTION_PROPS: -Dmaven.wagon.httpconnectionManager.ttlSeconds=60 -Dmaven.wagon.http.retryHandler.count=5

defaults:
  run:
    shell: bash

jobs:
  offline:
    name: Build project and cache Maven repo
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Install Java and Maven
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Run the build
        run: mvn clean install -DskipTests --batch-mode ${{ env.MVN_CONNECTION_PROPS }}
      - name: Upload the Maven repo cache
        uses: actions/upload-artifact@v2
        with:
          name: maven-repo-cache
          path: .m2/repository/**/*

  os-java:
    needs: offline
    name: OS x Java
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        java: [8, 11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Download the Maven cache
        uses: actions/download-artifact@v2
        with:
          name: maven-repo-cache
          path: .m2/repository
      - name: Build with Maven
        run: mvn -B test ${{ env.MVN_CONNECTION_PROPS }}

  # Early feedback on a compatibility with the newest Java version.
  # TODO: update each time a new major Java version is released.
  latest-jdk:
    needs: offline
    name: OpenJDK 15
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Download the Maven cache
        uses: actions/download-artifact@v2
        with:
          name: maven-repo-cache
          path: .m2/repository
      - name: Build with Maven
        run: mvn -B test ${{ env.MVN_CONNECTION_PROPS }}
