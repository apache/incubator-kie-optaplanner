# Runs optaplanner-persistence-jpa module tests in a PostgreSQL container

name: OptaPlanner Persistence JPA

on:
  push:
    branches:
      - 7.x
  pull_request:
    branches:
      - 7.x

env:
  # To prevent build failures due to "Connection reset" during artifact download.
  MVN_CONNECTION_PROPS: -Dmaven.wagon.httpconnectionManager.ttlSeconds=60 -Dmaven.wagon.http.retryHandler.count=5

defaults:
  run:
    shell: bash

jobs:
  jpa-postgresql-container:
    strategy:
      matrix:
        os: [ubuntu-latest]
        java-version: [11]
        maven-version: ['3.8.1']
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    name: ${{ matrix.os }} - Java ${{ matrix.java-version }} - Maven
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Java and Maven Setup
        uses: kiegroup/droolsjbpm-build-bootstrap/.ci/actions/maven@main
        with:
          java-version: ${{ matrix.java-version }}
          maven-version: ${{ matrix.maven-version }}
          cache-key-prefix: ${{ runner.os }}-${{ matrix.java-version }}-maven${{ matrix.maven-version }}
      # Builds the JPA module and runs tests in a PostgreSQL container
      - name: Build with Maven
        run: cd optaplanner-persistence/optaplanner-persistence-jpa && mvn -B clean install -Ppostgresql ${{ env.MVN_CONNECTION_PROPS }}
