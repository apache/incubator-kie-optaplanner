
name: Build Chain

on:
  pull_request:
    types: [labeled]
    branches:
      - main
      - 8.*
    paths-ignore:
      - 'LICENSE*'
      - '.gitignore'
      - '**.md'
      - '**.adoc'
      - '*.txt'
      - '.ci/**'

jobs:
  build-chain:
    if: contains(github.event.pull_request.labels.*.name, 'run_fdb')
    concurrency:
      group: fdb-${{ github.head_ref }}
      cancel-in-progress: true
    strategy:
      matrix:
        os: [ubuntu-latest]
        java-version: [11]
        maven-version: ['3.8.1']
      fail-fast: false
    runs-on: ${{ matrix.os }}
    name: Full downstream build
    steps:
      - name: Clean Disk Space
        uses: ginxo/kogito-pipelines/.ci/actions/ubuntu-disk-space@BXMSPROD-1540
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          java-version: ${{ matrix.java-version }}
          maven-version: ${{ matrix.maven-version }}
      - name: Support long paths
        if: ${{ matrix.os == 'windows-latest' }}
        uses: ginxo/kogito-pipelines/.ci/actions/long-paths@BXMSPROD-1540
      - name: Java and Maven Setup
        uses: ginxo/kogito-pipelines/.ci/actions/java@BXMSPROD-1540
        with:
          java-version: ${{ matrix.java-version }}
          maven-version: ${{ matrix.maven-version }}
      - name: Cache Maven
        uses: ginxo/kogito-pipelines/.ci/actions/cache-maven@BXMSPROD-1540
        with:
          key-prefix: ${{ runner.os }}-${{ matrix.java-version }}-maven${{ matrix.maven-version }}
      - name: Build Chain
        uses: ginxo/kogito-pipelines/.ci/actions/build-chain@BXMSPROD-1540
        with:
          annotations-prefix: ${{ runner.os }}-${{ matrix.java-version }}/${{ matrix.maven-version }}
          starting-project: kiegroup/optaplanner-quickstarts
          github-token: "${{ secrets.GITHUB_TOKEN }}"
        env:
          OPTAPLANNER_BUILD_MVN_OPTS_UPSTREAM: "-Dfull"
      - name: Surefire Report
        uses: ginxo/kogito-pipelines/.ci/actions/surefire-report@BXMSPROD-1540
        if: ${{ always() }}
