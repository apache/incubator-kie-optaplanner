<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.optaplanner</groupId>
    <artifactId>optaplanner-build-parent</artifactId>
    <version>8.45.0-SNAPSHOT</version>
    <relativePath>../build/optaplanner-build-parent/pom.xml</relativePath>
  </parent>

  <artifactId>optaplanner-docs</artifactId>
  <packaging>pom</packaging>

  <name>OptaPlanner documentation</name>
  <description>
    OptaPlanner solves planning problems.
    This lightweight, embeddable planning engine implements powerful and scalable algorithms
    to optimize business resource scheduling and planning.

    This module builds the documentation.
  </description>
  <url>https://www.optaplanner.org</url>

  <properties>
    <!--
    Antora ignores hidden files. The docs website should not incorporate this file as it brings the single-paged docs
    duplicating the other content.
    -->
    <source.document.name>.index.adoc</source.document.name>
    <docs.target.dir>${project.build.directory}/generated-docs</docs.target.dir>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <configuration>
          <sourceDirectory>${basedir}/src/modules/ROOT/pages</sourceDirectory>
          <resources>
            <resource>
              <directory>${basedir}/src/modules/ROOT/images</directory>
            </resource>
          </resources>
          <attributes>
            <optaplanner-version>${project.version}</optaplanner-version>
            <java-version>${maven.compiler.release}</java-version>
            <maven-version>${maven.min.version}</maven-version>
            <quarkus-version>${version.io.quarkus}</quarkus-version>
            <spring-boot-version>${version.org.springframework.boot}</spring-boot-version>
            <html-googleAnalyticsId>G-KJ89NSGDQ9</html-googleAnalyticsId>
          </attributes>
        </configuration>
        <executions>
          <execution>
            <id>generate-single-html</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <!-- Needs to be duplicated to avoid rendering each adoc separately -->
              <sourceDocumentName>${source.document.name}</sourceDocumentName>
              <backend>html5</backend>
              <outputDirectory>${docs.target.dir}/html_single</outputDirectory>
              <outputFile>index.html</outputFile>
              <attributes>
                <imagesdir>.</imagesdir>
                <source-highlighter>highlightjs</source-highlighter>
              </attributes>
            </configuration>
          </execution>
          <execution>
            <id>generate-pdf</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
            <configuration>
              <!-- Needs to be duplicated to avoid rendering each adoc separately -->
              <sourceDocumentName>${source.document.name}</sourceDocumentName>
              <backend>pdf</backend>
              <outputDirectory>${docs.target.dir}/pdf</outputDirectory>
              <outputFile>optaplanner-docs.pdf</outputFile>
              <attributes>
                <imagesdir>${basedir}/src/modules/ROOT/images</imagesdir>
                <source-highlighter>coderay</source-highlighter><!-- highlightjs does not work in PDF -->
              </attributes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>package-generated-docs</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <finalName>${project.artifactId}-${project.version}</finalName>
              <appendAssemblyId>false</appendAssemblyId>
              <archiveBaseDirectory>${docs.target.dir}/</archiveBaseDirectory>
              <descriptors>
                <descriptor>src/main/assembly/generated-docs-zip.xml</descriptor>
              </descriptors>
              <archive>
                <addMavenDescriptor>true</addMavenDescriptor>
              </archive>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <!-- Substitutes properties in antora-template.yml that is copied to src/antora.yml during a release. -->
          <execution>
            <id>generate-antora-yml</id>
            <goals>
              <goal>resources</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
              <resources>
                <resource>
                  <directory>${project.basedir}/src</directory>
                  <targetPath>${project.build.directory}</targetPath>
                  <includes>
                    <include>antora-template.yml</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
